if info.figs.bool.PF & any(T_Cases.idx==T_Cases_jj.idx_base)


    if T_Cases_jj.idx==T_Cases_jj.idx_base

        plot(info.Fig.PF.ax{T_Cases_jj.idx_base}{1},AUX.sys_data.T_PF.bus,AUX.sys_data.T_PF.Vm,'Color',color_jj,...
            'DisplayName',T_Cases_jj.DisplayName{:},...
            'Color',color_jj, ...
            'LineStyle',T_Style_jj.LineStyle{:},...
            'Marker',T_Style_jj.Marker{:},...
            'LineWidth',1.5)
        plot(info.Fig.PF.ax{T_Cases_jj.idx_base}{2},AUX.sys_data.T_PF.bus,AUX.sys_data.T_PF.theta,'Color',color_jj,...
            'DisplayName',T_Cases_jj.DisplayName{:},...
            'Color',color_jj, ...
            'LineStyle',T_Style_jj.LineStyle{:},...
            'Marker',T_Style_jj.Marker{:},...
            'LineWidth',1.5)
    else
        Base=info.AUX{T_Cases_jj.idx_base};

        Nodes_jj=AUX.sys_data.T_Aggr.busOld;

        Vm_base=Base.sys_data.T_PF.Vm(ismember(Base.sys_data.T_PF.bus,Nodes_jj));
        theta_base=Base.sys_data.T_PF.theta(ismember(Base.sys_data.T_PF.bus,Nodes_jj));
        
        Nodes_new_jj=AUX.sys_data.T_Aggr.busNew;
        Vm_jj=AUX.sys_data.T_PF.Vm(ismember(AUX.sys_data.T_PF.bus,Nodes_new_jj));
        theta_jj=AUX.sys_data.T_PF.theta(ismember(AUX.sys_data.T_PF.bus,Nodes_new_jj));

        plot(info.Fig.PF.ax{T_Cases_jj.idx_base}{1},...
            Nodes_jj,Vm_jj,'Color',color_jj,...
            'DisplayName',T_Cases_jj.DisplayName{:},...
            'LineStyle',T_Style_jj.LineStyle{:},...
            'Marker',T_Style_jj.Marker{:},...
            'LineWidth',1.5)
        plot(info.Fig.PF.ax{T_Cases_jj.idx_base}{2},...
            Nodes_jj,theta_jj,'Color',color_jj,...
            'DisplayName',T_Cases_jj.DisplayName{:},...
            'LineStyle',T_Style_jj.LineStyle{:},...
            'Marker',T_Style_jj.Marker{:},...
            'LineWidth',1.5)

        plot(info.Fig.PF.ax{T_Cases_jj.idx_base}{3},...
            Nodes_jj,Vm_base-Vm_jj,'Color',color_jj,...
            'DisplayName',T_Cases_jj.DisplayName{:},...
            'LineStyle',T_Style_jj.LineStyle{:},...
            'Marker',T_Style_jj.Marker{:},...
            'LineWidth',1.5)
        plot(info.Fig.PF.ax{T_Cases_jj.idx_base}{4},...
            Nodes_jj,theta_base-theta_jj,'Color',color_jj,...
            'DisplayName',T_Cases_jj.DisplayName{:},...
            'Color',color_jj, ...
            'LineStyle',T_Style_jj.LineStyle{:},...
            'Marker',T_Style_jj.Marker{:},...
            'LineWidth',1.5)
    end
end


if info.figs.bool.DSI & any(T_Cases.idx==T_Cases_jj.idx_base) & (T_Cases_jj.idx~= T_Cases_jj.idx_base)
    Base=info.AUX{T_Cases_jj.idx_base};

    input={"NET.vn1q","NET.vn1d"};
    output={"NET.iq_1_2","NET.id_1_2"};
    l_block_base=Base.sys_data.l_blocks(:);                
    l_block_base(2)=[];

    System_ref = (connect(l_block_base{:},input,output));

    l_block_jj=AUX.sys_data.l_blocks(:);
    l_block_jj(2)=[];

    System_jj=(connect(l_block_jj{:},input,output));

    Diff_sys_jj = System_ref-System_jj;
    DSI_jj = sigma(Diff_sys_jj,w_data);

    semilogx(info.Fig.DSI.ax,w_data/(2*pi), (DSI_jj(1,:))',...
        'DisplayName',T_Cases_jj.DisplayName{:},...
        'Color',color_jj, ...
        'LineStyle',T_Style_jj.LineStyle{:},...
        'Marker',T_Style_jj.Marker{:},...                    
        'MarkerIndices',idx_mkr+idx_mkr_del(jj_case),...
        'LineWidth',1.5)
    integral_=0;
    F_resp_all=freqresp(Diff_sys_jj,w_data);
    for w_idx=1:length(w_data)-1
        widx=w_data(w_idx);
        widx1=w_data(w_idx+1);
        tr_idx=trace((F_resp_all(:,:,w_idx))'*F_resp_all(:,:,w_idx));
        tr_idx1=trace((F_resp_all(:,:,w_idx+1))'*F_resp_all(:,:,w_idx+1));
        integral_=integral_+(widx1-widx)*(tr_idx+0.5*(tr_idx1-tr_idx));
    end


    T_Cases_run.(['DSI_H2_norm_tr'])(jj_case)=sqrt(1/(2*pi)*integral_);
    T_Cases_run.(['DSI_H2_norm_SVD'])(jj_case)=sqrt(1/(2*pi)*trapz(w_data,DSI_jj(1,:).^2));



end

if info.figs.bool.SVD
    input={"NET.vn1q","NET.vn1d"};
    output={"NET.iq_1_2","NET.id_1_2"};

    l_block_jj=AUX.sys_data.l_blocks(:);
    l_block_jj(2)=[];                
    System_jj=(connect(l_block_jj{:},input,output));

    SVD_jj = sigma(System_jj,w_data);
    semilogx(info.Fig.SVD.ax,w_data/(2*pi), (SVD_jj(1,:))',...
        'DisplayName',T_Cases_jj.DisplayName{:},...
        'Color',color_jj, ...
        'LineStyle',T_Style_jj.LineStyle{:},...
        'Marker',T_Style_jj.Marker{:},...                    
        'MarkerIndices',idx_mkr+idx_mkr_del(jj_case),...
        'LineWidth',1.5)
end

if info.figs.bool.Y_bode
    input={"NET.vn1q","NET.vn1d"};
    output={"NET.iq_1_2","NET.id_1_2"};

    l_block_jj=AUX.sys_data.l_blocks(:);
    l_block_jj(2)=[];                
    System_jj=(connect(l_block_jj{:},input,output));
    Y_name={'qq','qd','dq','dd'};
    Idx_bode={[1,1],[1,2],[2,1],[2,2]};
        
    for kk_idx=1:4
        [mag_kk,phase_kk,~] = bode(System_jj(Idx_bode{kk_idx}(1),Idx_bode{kk_idx}(2)),w_data);
        mag_kk=squeeze(mag_kk);
        phase_kk=squeeze(phase_kk);
        semilogx(info.Fig.Y_bode.ax{kk_idx}{1},w_data/(2*pi),20*log10(mag_kk),...
            'DisplayName',T_Cases_jj.DisplayName{:},...
            'Color',color_jj, ...
            'LineStyle',T_Style_jj.LineStyle{:},...
            'Marker',T_Style_jj.Marker{:},...                    
            'MarkerIndices',idx_mkr+idx_mkr_del(jj_case),...
            'LineWidth',1.5)

        semilogx(info.Fig.Y_bode.ax{kk_idx}{2},w_data/(2*pi),wrapTo180(phase_kk),...
            'DisplayName',T_Cases_jj.DisplayName{:},...
            'Color',color_jj, ...
            'LineStyle',T_Style_jj.LineStyle{:},...
            'Marker',T_Style_jj.Marker{:},...                    
            'MarkerIndices',idx_mkr+idx_mkr_del(jj_case),...
            'LineWidth',1.5)

    end
end


if info.figs.bool.EMT & any(T_Cases.idx==T_Cases_jj.idx_base)
    time_emt=EMT.sys_data.simnolin.tout;
    tf_=time_emt(end);
    mark_idx_emt=1:round(length(time_emt)/(15*tf_/(dx))):length(time_emt);
    mark_idx_emt(end)=[];
    mark_idx_emt_del=floor([0:height(T_Cases_run)-1].*(min(diff(mark_idx_emt)))/height(T_Cases_run));

    if bool_zoom

        index_zoom= time_emt >= x2_zoom(1) & time_emt <= x2_zoom(2);
        mark_idx_emt_z=1:round(length(time_emt)/(7*tf_/(dx2))):length(time_emt);
        mark_idx_emt_z(end)=[];
        mark_idx_emt_z_del=floor([0:height(T_Cases_run)-1].*(min(diff(mark_idx_emt_z)))/height(T_Cases_run));

    end




    for hh_idx=1:height(Figure_EMT_info)

        plot(info.Fig.EMT.ax{T_Cases_jj.idx_base}{hh_idx}{1},...
            time_emt,EMT.sys_data.simnolin.(Figure_EMT_info{hh_idx,4}),...
            'Color',color_jj,...
            'DisplayName',T_Cases_jj.DisplayName{:},...
            'LineStyle',T_Style_jj.LineStyle{:},...
            'MarkerIndices',mark_idx_emt+mark_idx_emt_del(jj_case),...
            'Marker',T_Style_jj.Marker{:},...
            'LineWidth',1.2)

        if bool_zoom

            plot(info.Fig.EMT.ax{T_Cases_jj.idx_base}{hh_idx}{3},...
                time_emt(index_zoom),EMT.sys_data.simnolin.(Figure_EMT_info{hh_idx,4})(index_zoom),...
                'Color',color_jj,...
                'DisplayName',T_Cases_jj.DisplayName{:},...
                'LineStyle',T_Style_jj.LineStyle{:},...
                'MarkerIndices',mark_idx_emt_z+mark_idx_emt_z_del(jj_case),...
                'Marker',T_Style_jj.Marker{:},...
                'LineWidth',1.2)
        end

    end
        

    if T_Cases_jj.idx~=T_Cases_jj.idx_base
       
        Base_EMT=info.EMT{T_Cases_jj.idx_base};

        for hh_idx=1:height(Figure_EMT_info)
            del_hh=(EMT.sys_data.simnolin.(Figure_EMT_info{hh_idx,4})-Base_EMT.sys_data.simnolin.(Figure_EMT_info{hh_idx,4}));
            error_emt=cumtrapz(time_emt,del_hh.^2);

            plot(info.Fig.EMT.ax{T_Cases_jj.idx_base}{hh_idx}{2},...
                time_emt,error_emt,...
                'Color',color_jj,...
                'DisplayName',T_Cases_jj.DisplayName{:},...
                'LineStyle',T_Style_jj.LineStyle{:},...
                'MarkerIndices',mark_idx_emt+mark_idx_emt_del(jj_case),...
                'Marker',T_Style_jj.Marker{:},...
                'LineWidth',1.2)

            T_Cases_run.(['e_',Figure_EMT_info{hh_idx,1}])(jj_case)=error_emt(end);

        end



    end
    
end